summary(m_normal)
m_normal %>%  ggplot(y = count, x= nitrate)
m_normal %>%  ggplot(y = count, x= nitrate) %>%
geom_point() %>%
geom_line()
m_normal %>%  ggplot(y = count, x= nitrate) +
geom_point() +
geom_line()
m_normal %>%  ggplot(y = count, x= nitrate) +
geom_point()
m_normal %>%  ggplot(y = count, x= nitrate) +
geom_point(y = count, x= nitrate)
m_normal %>%  ggplot(aes(y = count, x= nitrate) +
m_normal %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point(y = count, x= nitrate)
m_normal %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point(y = count, x= nitrate)
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point(y = count, x= nitrate)
df_count %>%  ggplot(aes(y = count, x= nitrate))
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point()
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point() +
geom_line()
# extract estimates
alpha <- coef(m_normal)[1] # intercept
beta <- coef(m_normal)[2] # slope
df_count %>%
ggplot(aes(x = nitrate,
y = count)) +
geom_point() +
geom_abline(intercept = alpha,
slope = beta)
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point() +
geom_abline()
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point() +
geom_abline()
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point() +
geom_abline(intercept = a, slope = b)
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point() +
geom_abline(intercept = a, slope = b)
a <- coef(m_normal)[1] # intercept
b <- coef(m_normal)[2] # slope
df_count %>%  ggplot(aes(y = count, x= nitrate)) +
geom_point() +
geom_abline(intercept = a, slope = b)
# extract estimates
alpha <- coef(m_normal)[1] # intercept
beta <- coef(m_normal)[2] # slope
glm(count ~ nitrate,
data = df_count)
glm(count ~ nitrate,
data = df_count,
family = "poisson")
m_pois <- glm(count ~ nitrate,
data = df_count,
family = "poisson")
m_pois
summary(m_pois)
theta <- coef(m_pois)
z_value <- theta/se
theta <- coef(m_pois)
se <- dia(cvov(m_pois))
z_value <- theta/se
se <- dia(cvov(m_pois))
se <- diag(cvov(m_pois))
se <- sqrt(diag(vcov(m_pois)))
theta <- coef(m_pois)
se <- sqrt(diag(vcov(m_pois)))
z_value <- theta/se
df_pred <- tibble(nitrate = seq(min(dfcount$nitrate), max(dfcount$nitrate), length = 100))
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100))
y_hat <- predict(m_pos, newdata = df_pred)
y_hat <- predict(m_pois, newdata = df_pred)
y_hat
y_hat <- predict(m_pois, newdata= df_pred) %>% exp()
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_hat <- predict(m_pois, newdata= df_pred) %>% exp())
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_hat <- predict(m_pois, newdata= df_pred) %>% exp())
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_hat <- predict(m_pois, newdata= .) %>% exp())
mutate(y_hat <- predict(m_pois, newdata= .) %>% exp(), y_norm = predict(m_normal, newdata = .)
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_hat <- predict(m_pois, newdata= .) %>% exp(), y_norm = predict(m_normal, newdata = .))
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_hat <- predict(m_pois, newdata= .) %>% exp(), y_norm = predict(m_normal, newdata = .))
df_count %>%
ggplot(aes(y = count, x = nitrate))
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() %>%
geom_line()
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() %>%
geom_line(data = geom_pred)
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = geom_pred)
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = geom_pred)
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred)
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, as(y = count, x = nitrate))
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, aes(y = count, x = nitrate))
View(df_pred)
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_norm, x = nitrate))
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_hat = predict(m_pois, newdata= .) %>% exp(), y_norm = predict(m_normal, newdata = .))
View(df_pred)
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_norm, x = nitrate)) +
geom_line(data = df_pred, aes(y = y_hat, x = nitrate))
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_norm, x = nitrate)) +
geom_line(data = df_pred, aes(y = y_pos, x = nitrate))
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_norm, x = nitrate)) +
geom_line(data = df_pred, aes(y = y_pois, x = nitrate))
df_pred <- tibble(nitrate = seq(min(df_count$nitrate), max(df_count$nitrate), length = 100)) %>%
mutate(y_pois = predict(m_pois, newdata= .) %>% exp(), y_norm = predict(m_normal, newdata = .))
df_count %>%
ggplot(aes(y = count, x = nitrate)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_norm, x = nitrate)) +
geom_line(data = df_pred, aes(y = y_pois, x = nitrate))
df_read_csv("data/raw/dara_mussel.csv")
df <- read_csv("data/raw/dara_mussel.csv")
library(tidyverse)
df <- read_csv("data/raw/dara_mussel.csv")
df_mussel <- read_csv("data/raw/dara_mussel.csv")
df_mussel <- read_csv("data/raw/dara_mussel.csv")
library(tidyverse)
df_mussel <- read_csv("data/raw/dara_mussel.csv")
df_mussel <- read_csv(here::here("data/raw/dara_mussel.csv"))
df_mussel <- read_csv(here::here("data/raw/data_mussel.csv"))
df_mussel <- read_csv(here::here("data/raw/data_mussel.csv"))
df_mussel <- read_csv(here::here("data_raw/data_mussel.csv"))
View(df_mussel)
df_mussel <- read_csv(here::here("data_raw/data_mussel.csv")) %>%
mutate(prop_fert = n_fertilized/n_examined)
df_mussel %>%
ggplot(aex(xxx)) +
geom_point()
df_mussel %>%
ggplot(aex(x=density, y= prop_fert)) +
geom_point()
df_mussel %>%
ggplot(aes(x=density, y= prop_fert)) +
geom_point()
# see how logit function works
# x: produce 100 numbers from -100 to 100 (assume logit scale)
# y: convert with inverse-logit transformation (ordinary scale)
df_test <- tibble(logit_p = seq(-10, 10, length = 100),
x = exp(logit_p) / (1 + exp(logit_p)))
df_test %>%
ggplot(aes(x = logit_p,
y = p)) +
geom_point() +
geom_line()
df_test %>%
ggplot(aes(x = logit_p,
y = p)) +
geom_point() +
geom_line()
df_test %>%
ggplot(aes(x = logit_p,
y = p)) +
geom_point() +
geom_line() +
labs(y = "x",
x = "logit(x)")
df_test %>%
ggplot(aes(x = logit_p,
y = x)) +
geom_point() +
geom_line() +
labs(y = "x",
x = "logit(x)")
df_test %>%
ggplot(aes(x = logit_p,
y = x)) +
geom_point() +
geom_line() +
labs(y = "p",
x = "logit(p)")
df_test %>%
ggplot(aes(x = logit_p,
y = x)) +
geom_point() +
geom_line() +
labs(y = "p",
x = "logit_p")
df_test %>%
ggplot(aes(x = logit_p,
y = x)) +
geom_point() +
geom_line() +
labs(y = "p",
x = "log(P / 1 - P)")
m_binom <- glm(cbind(n_fertilized, n_examined - n_fertilized) ~ density,
data = df_mussel,
family = "binomial")
summary(m_binom)
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100))
df_pred %>%
mutate(y_hat = predict(m_binom, df_pred))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(y_hat = predict(m_binom, df_pred))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(y_hat = predict(m_binom, df_pred))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(y_hat = predict(m_binom, newdata= .))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(logit_y_hat = predict(m_binom, newdata= .))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(logit_y_hat = predict(m_binom, newdata= .), y_ha = f(logit_y_hat))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(logit_y_hat = predict(m_binom, newdata= .), y_hat = exp(logit_y_hat) / (1 + exp(logit_y_hat)))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(logit_y_hat = predict(m_binom, newdata= .),
y_hat = exp(logit_y_hat) / (1 + exp(logit_y_hat)))
df_pred <- tibble(density = seq(min(df_mussel$density),
max(df_mussel$density),
length = 100)) %>%
mutate(logit_y_hat = predict(m_binom, newdata= .),
y_hat = exp(logit_y_hat) / (1 + exp(logit_y_hat)), y_hat0 = boot::inv.logit(logit_y_hat))
df_mussel %>%  ggplot(aes(x = density, y = prop_fert))
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) %>%
geom_point()
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point()
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point() +
geom_line()
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point() +
geom_line(data = df_pred)
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_biom))
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_hat))
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point() +
geom_line(data = df_pred, aes(y = logit_y_hat))
df_mussel %>%  ggplot(aes(x = density, y = prop_fert)) +
geom_point() +
geom_line(data = df_pred, aes(y = y_hat))
data <- read_csv("data_raw/data_vpart.csv")
library(tidyverse)
data <- read_csv("data_raw/data_vpart.csv")
View(data)
m_pois <- glm(n_sp ~ cat_area,
data = data,
family = "normal")
m_pois <- glm(n_sp ~ cat_area,
data = data,
family = "normal")
m_pois <- glm(n_sp ~ cat_area,
data = data,
family = "Normal")
m_pois <- glm(n_sp ~ cat_area,
data = data,
family = "normal")
m_normal <- glm(n_sp ~ cat_area,
data = data,
family = "normal")
m_normal <- glm(n_sp ~ cat_area,
data = data)
m_normal
model <- glm(n_sp ~ cat_area,
data = data,
family = "poisson")
model <- glm(n_sp ~ cat_area,
data = data,
family = "poisson")
model
model <- glm(n_sp ~ distance + cat_area + hull_area,
data = data,
family = "poisson")
model
model
summary(model)
var(data$n_sp)
mean(data$n_sp)
var(data$n_sp)
## small exercise
x1 <- rnorm(100, mean = 0, sd = 5)
x2 <- rnorm(100, mean = 0, sd = 10)
sd(x1)
sd(x1):sd(x2)
sd(x1);sd(x2)
z1 <- x1 / sd(x1)
z2 <- x2 / sd(x2)
sd(z1); sd(z2)
y1 <- rnorm(100, mean = 10, sd = 5)
y2 <- rnorm(100, mean = 2, sd = 5)
mean(y1); mean(y2)
sd(y1); mean(y2)
mean(scale(y1))
mean(scale(y1)); sd(scale(y1))
mean(scale(y2)); sd(scale(y2))
mean(scale(y1)); sd(scale(y1))
mean(scale(y2)); sd(scale(y2))
scale(data)
data2 <- scale(data$n_sp) %>%
scale(data$n_sp_diad)
data2 <- scale(data$n_sp)
head(data2)
data2 <- scale(data$n_sp) %>%
scale(data$cat_area)
data2 <- data %>% scale(data$n_sp) %>%
scale(data$cat_area)
data2 <- data %>% scale(n_sp) %>%
scale(cat_area)
data2 <- data %>% scale(n_sp)
data2 <- data %>% scale(data$n_sp)
data2 <- scale(data$n_sp)
scale(data$car_area)
scale(data$cat_area)
data2 <- scale(data$n_sp) %>%
scale(data$cat_area)
data2 <- scale(data$n_sp) %>%
scale(data$cat_area)
data2 <- data %>% scale(data$n_sp) %>%
scale(data$cat_area)
data2 <- data %>% scale(data$n_sp) %>%
scale(data$cat_area)
scale(data$cat_area)
data2 <- scale(data$n_sp
data2 <- scale(data$n_sp)
scale(data$cat_area)
data2 <- scale(data$n_sp)
scale(data$cat_area)
n_sp <- scale(data$n_sp)
cat_area <- scale(data$cat_area)
hull_area <- scale(data$hull_area)
n_sp <- scale(data$n_sp)
cat_area <- scale(data$cat_area)
hull_area <- scale(data$hull_area)
View(n_sp)
View(cat_area)
merge(n_sp, cat_area)
newdata <- merge(n_sp, cat_area)
VIew(newdata)
View(newdata)
model <- glm(scale(n_sp) ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
model <- glm(scale(n_sp) ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
model <- glm(scale(n_sp) ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
model <- glm(scale(n_sp) ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
n_sp <- scale(data$n_sp)
cat_area <- scale(data$cat_area)
hull_area <- scale(data$hull_area)
n_sp
cat_area
hull_area
model <- glm(scale(abs(n_sp)) ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
model <- glm(scale(abs(n_sp)) ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
model <- glm(n_sp ~ scale(distance) + scale(cat_area) + scale(hull_area),
data = data,
family = "poisson")
plot(n_sp ~ distance, data)
plot(n_sp ~ scale(distance), data)
plot(n_sp ~ distance, data)
plot(n_sp ~ scale(distance), data)
library(tidyverse)
dpois(3, lambda =3.5)
# write the formula to confirm
(p <- (3.5^3 * exp(-3.5)) / facortial(3))
# write the formula to confirm
(p <- (3.5^3 * exp(-3.5)) / factorial(3))
lambda <- seq(0, 10, by = 0.01)
dpois(3, lambda = c(2, 3.5))
dpois(3, lambda = lambda)
tibble(y = 3, lambda = lambda, pr = dpois(3, lambda = lambda))
df_pr <0 tibble(y = 3, lambda = lambda, pr = dpois(3, lambda = lambda))
df_pr <- tibble(y = 3, lambda = lambda, pr = dpois(3, lambda = lambda))
ggplot(data = df_pr, aes(y = pr, x = lambda))
ggplot(data = df_pr, aes(y = pr, x = lambda)) %>%
geom_line()
ggplot(data = df_pr, aes(y = pr, x = lambda)) +
geom_line()
ggplot(data = df_pr, aes(y = pr, x = lambda)) +
geom_line() +
geom_point()
df_pr %>%
arrange(desc(pr))
dpois(c(3,2,5), lambda = 3)
prod(dpois(c(3,2,5), lambda = 3))
pr <- prod(dpois(c(3,2,5), lambda = 3))
prod(pr)
df_pr %>%
arrange(desc(pr))
pr <- prod(dpois(c(3,2,5), lambda = lambda))
arrange(desc(pr))
arrange(desc(pr))
pr <- prod(dpois(c(3,2,5), lambda = lambda))
arrange(desc(pr))
pr <- prod(dpois(c(3,2,5), lambda = lambda))
view(pr)
best_lambda(pr)
install.packages("bis557")
library(bis557)
pr <- prod(dpois(c(3,2,5), lambda = 3))
prod(pr)
lh[i] <- prd(pr0)
lh[i] <- prod(pr0)
lh <- NULL
for (i in 1:length(lambda)) {pr0 <- dpois(c(3,2,5, lambda = lambda[i])
pr0 <- dpois(c(3,2,5), lambda = lambda[i])
lh <- NULL
for (i in 1:length(lambda)) {
pr0 <- dpois(c(3,2,5), lambda = lambda[i])
lh[i] <- prod(pr0)
}
lh <- NULL
for (i in 1:length(lambda)) {
pr0 <- dpois(c(3,2,5), lambda = lambda[i])
likeli[i] <- prod(pr0)
}
lh <- NULL
for (i in 1:length(lambda)) {
pr0 <- dpois(c(3,2,5), lambda = lambda[i])
lh[i] <- prod(pr0)
}
likieli <- NULL
for (i in 1:length(lambda)) {
pr0 <- dpois(c(3,2,5), lambda = lambda[i])
likieli[i] <- prod(pr0)
}
tibble(lambda = lambda, pr = likieli)
tibble(lambda = lambda, pr = likieli) %>%
ggplot(aes(x = lambda, y = pr)) +
geom_line()
df_pr1 %>%
arrange(desc(pr))
df_pr1 %>%
arrange(desc(pr))
df_pr1 %>%
arrange(desc(pr))
df_pr1 <- tibble(lambda = lambda, pr = likieli
df_pr1 %>%
ggplot(aes(x = lambda, y = pr)) +
geom_line()
df_pr1 <- tibble(lambda = lambda, pr = likieli
df_pr1 <- tibble(lambda = lambda, pr = likieli)
df_pr1 <- tibble(lambda = lambda, pr = likieli)
df_pr1 %>%
ggplot(aes(x = lambda, y = pr)) +
geom_line()
df_pr1 %>%
arrange(desc(pr)) %>%
slice(1) %>%
pull(lambda)
mean(c(3, 2, 5))
mean(c(3, 2, 5))
