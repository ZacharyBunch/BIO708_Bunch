df <- (((x[1,3]^2)/(length(a1_test$value)))+((x[2,3]^2)/(length(a2_test$value))))^2 / ((((((x[1,3]^2)/(length(a1_test$value)))^2))/(length(a1_test$value)-1)) + (((((x[2,3]^2)/(length(a2_test$value)))^2))/(length(a2_test$value)-1)))
df
p_value <- ((1 - pt(t_a1_a2, df = df)) * 2)
df_1 <- (((x[1,3]^2)/(length(a1_test$value)))+((x[2,3]^2)/(length(a2_test$value))))^2 / ((((((x[1,3]^2)/(length(a1_test$value)))^2))/(length(a1_test$value)-1)) + (((((x[2,3]^2)/(length(a2_test$value)))^2))/(length(a2_test$value)-1)))
df_1
p_value <- ((1 - pt(t_a1_a2, df = df_1)) * 2)
p_value <- ((1 - pt(t_a1_a2, df = df)) * 2)
p_value <- (1 - pt(t_a1_a2, df = df)) * 2
p_value <- pt(t_a1_a2, df = df)) * 2
p_value <- pt(t_a1_a2, df = df) * 2
p_value <- pt(t_a1_a2, df = df) * 2
t_a1_a2
p_value <- (1-pt(abs(t_a1_a2), df = df)) * 2
p_value <- (1-pt(abs(t_a1_a2), df = df)) * 2
df
df <- as.numeric(df)
t_a1_a2 <- as.number(t_a1_a2)
t_a1_a2 <- as.numberic(t_a1_a2)
t_a1_a2 <- as.numeric(t_a1_a2)
p_value <- (1-pt(abs(t_a1_a2), df = df)) * 2
p_value
read_csv(here::here("data_raw/data_fish_length_anova.csv"))
read_csv(here::here("data_raw/data_fish_length_anova"))
library(tidyverse)
read_csv(here::here("data_raw/data_fish_length_anova"))
read_csv(here::here("data_raw/data_fish_length_anova.csv"))
#check
distinct(df_anova, lake)
df_anova <- read_csv(here::here("data_raw/data_fish_length_anova.csv"))
#check
distinct(df_anova, lake)
unique(df_anova$lake)
df_anova %>%
ggplot(aes(x=lake, y = length))
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin()
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = salmon)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon')
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5) +
geom_jitter( width - 0.2)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5) +
geom_jitter(width - 0.2)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5) +
geom_jitter(width - 0.2)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5) +
geom_jitter(width - 0.2)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5) +
geom_jitter(width = 0.2, height = 0)
df_anova %>%
ggplot(aes(x=lake, y = length)) +
geom_violin(draw_quantiles = 0.5, fill = 'salmon', alpha = 0.5) +
geom_jitter(width = 0.2, height = 0, alpha = 0.5)
fit <- aov(formula = length ~ lake, data = df_anova)
summary(fit)
x_a <- df_anova %>%
filter(lake == "a") %>%
pull(length)
mu_a <- mean(x_a)
x_b <- df_anova %>%
filter(lake == 'b') %>%
pull(length)
mu_a <- mean(x_a)
x_a
x_c <- df_anova %>%
filter(lake == 'c') %>%
pull(length)
mu_a <- mean(x_a)
mu_c <- mean(x_c)
mu_a <- mean(x_a)
mu_b <- mean(x_b)
mu_c <- mean(x_c)
mu <- mean(df_anova$length)
x_a <- df_anova %>%
filter(lake == "a") %>%
pull(length)
x_b <- df_anova %>%
filter(lake == 'b') %>%
pull(length)
x_c <- df_anova %>%
filter(lake == 'c') %>%
pull(length)
mu_a <- mean(x_a)
mu_b <- mean(x_b)
mu_c <- mean(x_c)
#group level information
x_a <- df_anova %>%
filter(lake == "a") %>%
pull(length)
ss_gc <- mu_c -mu
mu_a
mu
mu_b
mu_c
ss_ga <- (mu_a -mu)^2
ss_gb <- (mu_b -mu)^2
ss_gc <- (mu_c -mu)^2
ss_ga
ss_gb
ss_gc
ss_g <- ss_ga + ss_gb + ss_gc
ss_ga <- (mu_a -mu)^2 * length(x,a)
ss_gb <- (mu_b -mu)^2 * length(x,b)
ss_ga <- (mu_a -mu)^2 * length(x_a)
ss_gb <- (mu_b -mu)^2 * length(x_b)
ss_gc <- (mu_c -mu)^2 * length(x_c)
ss_g <- ss_ga + ss_gb + ss_gc
# estimate overall mean
mu <- mean(df_anova$length)
# estimate group means and sample size each
df_g <- df_anova %>%
group_by(lake) %>%
summarize(mu_g = mean(length), # mean for each group
dev_g = (mu_g - mu)^2, # squared deviation for each group
n = n()) # sample size for each group
print(df_g)
df_g %>%
mutate(ss = dev_g * n) %>%
pull(ss) %>%
sum()
ss_g <- df_g %>%
mutate(ss = dev_g * n) %>%
pull(ss) %>%
sum()
x_a - mu_a
x_c - mu_c
dev_ia <- (x_a - mu_a)^2
dev_ib <- (x_b - mu_b)^2
dev_ic <- (x_c - mu_c)^2
dev_ic
sum(dev_ia)
sum(dev_ib)
sum(dev_ic)
sum(dev_ia) + sum(dev_ib) + sum(dev_ic)
summary(fit)
ss_w <- sum(dev_ia) + sum(dev_ib) + sum(dev_ic)
df_i <- df_anova %>%
group_by(lake) %>%
mutate(mu_g = mean(length)) %>% # use mutate() to retain individual rows
ungroup() %>%
mutate(dev_i = (length - mu_g)^2) # deviation from group mean for each fish
ss_g
ss_w
ss_g / (3 - 1)
var_g <- ss_g / (3 - 1)
ss_w <- ss_w / (150 - 3)
nrow(df_anova)
summary(fit)
var_g / var_w
var_g / var_w
var_w <- ss_w / (150 - 3)
var_g / var_w
var_g <- ss_g / (3 - 1)
var_w <- ss_w / (150 - 3)
var_g / var_w
ss_w <- sum(dev_ia) + sum(dev_ib) + sum(dev_ic)
df_i <- df_anova %>%
group_by(lake) %>%
mutate(mu_g = mean(length)) %>% # use mutate() to retain individual rows
ungroup() %>%
mutate(dev_i = (length - mu_g)^2) # deviation from group mean for each fish
var_g <- ss_g / (3 - 1)
var_w <- ss_w / (150 - 3)
var_g / var_w
# get F value
var_g / var_w
# get F value
f_value <- var_g / var_w
x <- seq(0,10, by = 0.1)
df(x, df1 = 3 - 1, df2 = 150 -3)
y <- df(x, df1 = 3 - 1, df2 = 150 -3)
tibble(x = x, y = y) %>%
ggplot(aes(x=x, y = y)) +
geom_line()
tibble(x = x, y = y) %>%
ggplot(aes(x=x, y = y)) +
geom_line() +
geom_vline()
tibble(x = x, y = y) %>%
ggplot(aes(x=x, y = y)) +
geom_line() +
geom_vline(xintercept = f_value)
tibble(x = x, y = y) %>%
ggplot(aes(x=x, y = y)) +
geom_line() +
geom_vline(xintercept = f_value, color = "salmon")
tibble(x = x, y = y) %>%
ggplot(aes(x=x, y = y)) +
geom_line() +
geom_vline(xintercept = f_value, color = "salmon", linetype = dashed)
tibble(x = x, y = y) %>%
ggplot(aes(x=x, y = y)) +
geom_line() +
geom_vline(xintercept = f_value, color = "salmon", linetype = "dashed")
p_value <- 1 = pf(f_value, df1 = 3 - 1, df2 = 150 -3)
p_value <- 1 - pf(f_value, df1 = 3 - 1, df2 = 150 -3)
p_value
PrantGrowth %>%
ggplot(aes(x = lake,
y = length)) +
geom_violin(draw_quantiles = 0.5, # draw median horizontal line
alpha = 0.2) + # transparency
geom_jitter(alpha = 0.2) # transparency
PlantGrowth %>%
ggplot(aes(x = lake,
y = length)) +
geom_violin(draw_quantiles = 0.5, # draw median horizontal line
alpha = 0.2) + # transparency
geom_jitter(alpha = 0.2) # transparency
View(PlantGrowth)
PlantGrowth %>%
ggplot(aes(x = group,
y = weight)) +
geom_violin(draw_quantiles = 0.5, # draw median horizontal line
alpha = 0.2) + # transparency
geom_jitter(alpha = 0.2) # transparency
library(tidyverse)
PlantGrowth %>%
ggplot(aes(x = group,
y = weight)) +
geom_violin(draw_quantiles = 0.5, # draw median horizontal line
alpha = 0.2) + # transparency
geom_jitter(alpha = 0.2) # transparency
PlantGrowth %>%
ggplot(aes(x = group,
y = weight)) +
geom_jitter(width = 0.1, # scatter width
height = 0, # scatter height (no scatter with zero)
alpha = 0.25) + # transparency of data points
geom_segment(data = df_fl_mu, # switch data frame
aes(x = lake,
xend = lake,
y = mu_l - sd_l,
yend = mu_l + sd_l)) +
geom_point(data = df_fl_mu, # switch data frame
aes(x = lake,
y = mu_l),
size = 3) +
labs(x = "Lake", # x label
y = "Fish body length") # y label
PlantGrowth %>%
ggplot(aes(x = group,
y = weight)) +
geom_jitter(width = 0.1, # scatter width
height = 0, # scatter height (no scatter with zero)
alpha = 0.25) + # transparency of data points
geom_segment(data = df_fl_mu, # switch data frame
aes(x = group,
xend = group,
y = mu_l - sd_l,
yend = mu_l + sd_l)) +
geom_point(data = df_fl_mu, # switch data frame
aes(x = group,
y = mu_l),
size = 3) +
labs(x = "Lake", # x label
y = "Fish body length") # y label
# group mean and sd
plant_fl_mu <- PlantGrowth %>%
group_by(group) %>% # group operation
summarize(mu_l = mean(weight), # summarize by mean()
sd_l = sd(weight)) # summarize with sd()
PlantGrowth %>%
ggplot(aes(x = group,
y = weight)) +
geom_jitter(width = 0.1, # scatter width
height = 0, # scatter height (no scatter with zero)
alpha = 0.25) + # transparency of data points
geom_segment(data = plant_fl_mu, # switch data frame
aes(x = group,
xend = group,
y = mu_l - sd_l,
yend = mu_l + sd_l)) +
geom_point(data = plant_fl_mu, # switch data frame
aes(x = group,
y = mu_l),
size = 3) +
labs(x = "Lake", # x label
y = "Fish body length") # y label
PlantGrowth %>%
ggplot(aes(x = group,
y = weight)) +
geom_jitter(width = 0.1, # scatter width
height = 0, # scatter height (no scatter with zero)
alpha = 0.25) + # transparency of data points
geom_segment(data = plant_fl_mu, # switch data frame
aes(x = group,
xend = group,
y = mu_l - sd_l,
yend = mu_l + sd_l)) +
geom_point(data = plant_fl_mu, # switch data frame
aes(x = group,
y = mu_l),
size = 3) +
labs(x = "Group", # x label
y = "Weight") # y label
aov_plant <- aov(formula = weight ~ group, data = PlantGrowth)
aov_plant
aov_plant
summary(aov_plant)
df1 = 5 - 1
df2 = 30 - 5
pf(aov_plant, df1, df2)
pf(aov_plant, 4, 25)
pf(PlantGrowth, df1, df2)
x <- seq(3, 15, by = 2)
pf(x, df1, df2)
x <- seq(5, 30, by = 2)
pf(x, df1, df2)
x
x <- seq(5, 30, length = 30)
x
pf(x, df1, df2)
1 - pf(4.846, df1 = 4, df2 = 25)
1 - pf(4.846, df1 = 3, df2 = 16)
library(tidyverse)
read_csv(here::here("data_raw/data_algae.csv"))
df_algae <- read_csv(here::here("data_raw/data_algae.csv"))
df_algae <- read_csv(here::here("data_raw/data_algae.csv"))
df_algae %>%
ggplot(aes(x = conductivity,
y = biomass)) +
geom_point()
# lm() takes a formula as the first argument
# don't forget to supply your data
m <- lm(biomass ~ conductivity,
data = df_algae)
# lm() takes a formula as the first argument
# don't forget to supply your data
m <- lm(biomass ~ conductivity,
data = df_algae)
summary(m)
# lm() takes a formula as the first argument
# don't forget to supply your data
fit <- lm(biomass ~ conductivity,
data = df_algae)
summary(fit)
# lm() takes a formula as the first argument
# don't forget to supply your data
m <- lm(biomass ~ conductivity,
data = df_algae)
summary(m)
alpha
beta
y_hat <- alpha + beta
y_hat <- alpha + beta
alpha <- coef(m)[1]
beta <- coef(m)[2]
df_algae %>%
ggplot(aes(x = conductivity,
y = biomass)) +
geom_point() +
geom_abline(intercept = alpha,
slope = beta) # draw the line
y_hat <- alpha + beta
y_hat <- alpha + beta * df_algae$conductivity
df_algae %>%
mutate(y_hat = alpha + beta * conductivity)
df_algae <- df_algae %>%
mutate(y_hat = alpha + beta * conductivity)
epsilon <- df_algae$biomass - y_hat
df_algae <- df_algae %>%
mutate(y_hat = alpha + beta * conductivity)
df_algae <- df_algae %>%
mutate(y_hat = alpha + beta * conductivity, epsilon = biomass - y_hat)
sd(epsilon)
epsilon <- df_algae$biomass - y_hat
df_algae <- df_algae %>%
mutate(y_hat = alpha + beta * conductivity, epsilon = biomass - y_hat)
sd(epsilon)
summary(m)
theta <- coef(m)
# extract coefficients
theta <- coef(m)
# extract standard errors
se <- sqrt(diag(vcov(m)))
# t-value
t_value <- theta / se
print(t_value)
theta / se
# for intercept
# (1 - pt(t_value[1], df = 48)) calculates pr(t > t_value[1])
# pt(-t_value[1], df = 48) calculates pr(t < -t_value[1])
p_alpha <- (1 - pt(t_value[1], df = 48)) + pt(-t_value[1], df = 48)
# for slope
p_beta <- (1 - pt(t_value[2], df = 48)) + pt(-t_value[2], df = 48)
print(p_alpha)
summary(fit)
eps <- resid(m)
# add error column
df_algae <- df_algae %>%
mutate(eps = eps)
# visualization of errors
df_algae %>%
ggplot(aes(x = conductivity,
y = biomass)) +
geom_point() +
geom_abline(intercept = alpha,
slope = beta) +
geom_segment(aes(x = conductivity, # start-coord x
xend = conductivity, # end-coord x
y = biomass, # start-coord y
yend = biomass - eps), # end-coord y
linetype = "dashed")
head(iris)
View(iris)
Setosa <- iris %>% filter(Species = "setosa")
Setosa <- iris %>% filter(Species == "setosa")
library(tidyverse)
head(iris)
Setosa <- iris %>% filter(Species == "setosa")
View(Setosa)
setosa <- iris %>% filter(Species == "setosa")
versicolor <- iris %>% filter(Species == "setosa")
versicolor <- iris %>% filter(Species == "versicolor")
virginica <- iris %>% filter(Species == "virginica")
setosa <- iris %>% filter(Species == "setosa")
versicolor <- iris %>% filter(Species == "versicolor")
virginica <- iris %>% filter(Species == "virginica")
View(virginica)
m <- lm(Sepal.Width ~ Petal.Width,
data = iris)
setosa_reg <- lm(Sepal.Width ~ Petal.Width,
data = setosa)
summary(m)
setosa_reg <- lm(Sepal.Width ~ Petal.Width,
data = setosa)
summary(setosa_reg)
versicolor_reg <- lm(Sepal.Width ~ Petal.Width,
data = versicolor)
summary(versicolor_reg)
virginica_reg <- lm(Sepal.Width ~ Petal.Width,
data = virginica)
summary(virginica_reg)
setosa_reg2 <- lm(Sepal.Width ~ Petal.Length,
data = setosa)
summary(setosa_reg2)
versicolor_reg2 <- lm(Sepal.Width ~ Petal.Length,
data = versicolor)
summary(versicolor_reg2)
virginica_reg2 <- lm(Sepal.Width ~ Petal.Length,
data = virginica)
summary(virginica_reg2)
summary(virginica_reg)
setosa_reg2 <- lm(Sepal.Width ~ Petal.Length ~ Petal.Width,
data = setosa)
setosa_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = setosa)
summary(setosa_reg2)
virginica_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = virginica)
summary(virginica_reg2)
summary(virginica_reg)
setosa_reg <- lm(Sepal.Width ~ Petal.Width,
data = setosa)
summary(setosa_reg)
setosa_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = setosa)
summary(setosa_reg2)
versicolor_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = versicolor)
summary(versicolor_reg2)
virginica_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = virginica)
summary(virginica_reg2)
setosa_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = setosa)
summary(virginica_reg2)
summary(versicolor_reg2)
library(tidyverse)
head(iris)
setosa <- iris %>% filter(Species == "setosa")
versicolor <- iris %>% filter(Species == "versicolor")
virginica <- iris %>% filter(Species == "virginica")
setosa_reg <- lm(Sepal.Width ~ Petal.Width,
data = setosa)
summary(setosa_reg)
versicolor_reg <- lm(Sepal.Width ~ Petal.Width,
data = versicolor)
summary(versicolor_reg)
virginica_reg <- lm(Sepal.Width ~ Petal.Width,
data = virginica)
summary(virginica_reg)
setosa_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = setosa)
summary(setosa_reg2)
versicolor_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = versicolor)
summary(versicolor_reg2)
virginica_reg2 <- lm(Sepal.Width ~ Petal.Length + Petal.Width,
data = virginica)
summary(virginica_reg2)
